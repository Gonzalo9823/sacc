generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int           @id @default(autoincrement())
  name          String?
  email         String        @unique
  password      String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          UserRole
  enabled       Boolean
  Reservation   Reservation[]
}

enum UserRole {
  ADMIN
  USER
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Reservation {
  id               Int      @id @default(autoincrement())
  stationName      String
  lockerId         Int
  clientEmail      String
  operatorEmail    String
  confirmed        Boolean
  loaded           Boolean
  expired          Boolean
  completed        Boolean
  operatorPassword String
  clientPassword   String
  createdAt        DateTime @default(now())
  createdBy        User     @relation(fields: [createdById], references: [id])
  createdById      Int
}
